[{"D:\\Gautam\\ReactJS\\spotify-clone\\src\\index.js":"1","D:\\Gautam\\ReactJS\\spotify-clone\\src\\reportWebVitals.js":"2","D:\\Gautam\\ReactJS\\spotify-clone\\src\\App.js":"3","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Leftbar.js":"4","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\FriendSection.js":"5","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\MainContent.js":"6","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Song.js":"7","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Navbar.js":"8"},{"size":517,"mtime":1609515715374,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1609515715374,"results":"11","hashOfConfig":"10"},{"size":488,"mtime":1610040925240,"results":"12","hashOfConfig":"10"},{"size":945,"mtime":1610094790357,"results":"13","hashOfConfig":"10"},{"size":716,"mtime":1609523318889,"results":"14","hashOfConfig":"10"},{"size":1940,"mtime":1610094997139,"results":"15","hashOfConfig":"10"},{"size":520,"mtime":1610094923564,"results":"16","hashOfConfig":"10"},{"size":1365,"mtime":1610126261646,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3qib9n",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Gautam\\ReactJS\\spotify-clone\\src\\index.js",[],["36","37"],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\reportWebVitals.js",[],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\App.js",[],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Leftbar.js",[],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\FriendSection.js",[],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\MainContent.js",["38"],"import React, { useEffect, useState } from 'react'\r\n// import Navbar from './Navbar'\r\nimport '../styles/MainContent.css'\r\nimport Song from './Song'\r\n\r\nconst MainContent = ({search, setSearch}) => {\r\n\r\n    const [songs, setSongs] = useState([])\r\n\r\n    async function getData() {\r\n            fetch(\"https://deezerdevs-deezer.p.rapidapi.com/search?q=\" + search, {\r\n\t        \"method\": \"GET\",\r\n\t        \"headers\": {\r\n\t\t        \"x-rapidapi-key\": \"b545cc0c9fmsh99eb19dad714458p1d851bjsn1078d70b3e88\",\r\n\t\t        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\"\r\n            }\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then((songs) => {\r\n                setSongs(songs.data)\r\n                // console.log(songs.data)\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n        }\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            search = 'queen'\r\n        }\r\n        getData()\r\n    }, [search]) //useState is called only once before the songs are set.\r\n\r\n    return (\r\n        <div className='mainContent'>\r\n            <input type = 'text' name = 'search' className = 'mainContent__search'\r\n            value = {search}\r\n            onChange = {setSearch}\r\n            />\r\n            {/* <Navbar className = 'mainContent__navbar' /> */}\r\n            <div className = 'mainContent__songRow'>\r\n                {songs.map((song) => {\r\n                    return (\r\n                        <Song\r\n                        key = {song.id}\r\n                        song_image = {song.album.cover_xl}\r\n                        song_title = {song.album.title}\r\n                        artist = {song.artist.name}\r\n                        url = {song.preview}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContent","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Song.js",[],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Navbar.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":32,"column":22,"nodeType":"45","endLine":32,"endColumn":29},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react-hooks/exhaustive-deps","Assignments to the 'search' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-global-assign","no-unsafe-negation"]