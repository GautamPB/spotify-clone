[{"D:\\Gautam\\ReactJS\\spotify-clone\\src\\index.js":"1","D:\\Gautam\\ReactJS\\spotify-clone\\src\\reportWebVitals.js":"2","D:\\Gautam\\ReactJS\\spotify-clone\\src\\App.js":"3","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Leftbar.js":"4","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\FriendSection.js":"5","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\MainContent.js":"6","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Song.js":"7","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Navbar.js":"8","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Login.js":"9"},{"size":517,"mtime":1609515715374,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1609515715374,"results":"12","hashOfConfig":"11"},{"size":702,"mtime":1610303769010,"results":"13","hashOfConfig":"11"},{"size":945,"mtime":1610094790357,"results":"14","hashOfConfig":"11"},{"size":716,"mtime":1609523318889,"results":"15","hashOfConfig":"11"},{"size":1940,"mtime":1610094997139,"results":"16","hashOfConfig":"11"},{"size":521,"mtime":1610266257817,"results":"17","hashOfConfig":"11"},{"size":1554,"mtime":1610303151526,"results":"18","hashOfConfig":"11"},{"size":817,"mtime":1610303672973,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"3qib9n",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Gautam\\ReactJS\\spotify-clone\\src\\index.js",[],["42","43"],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\reportWebVitals.js",[],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\App.js",[],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Leftbar.js",[],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\FriendSection.js",[],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\MainContent.js",["44"],"import React, { useEffect, useState } from 'react'\r\n// import Navbar from './Navbar'\r\nimport '../styles/MainContent.css'\r\nimport Song from './Song'\r\n\r\nconst MainContent = ({search, setSearch}) => {\r\n\r\n    const [songs, setSongs] = useState([])\r\n\r\n    async function getData() {\r\n            fetch(\"https://deezerdevs-deezer.p.rapidapi.com/search?q=\" + search, {\r\n\t        \"method\": \"GET\",\r\n\t        \"headers\": {\r\n\t\t        \"x-rapidapi-key\": \"b545cc0c9fmsh99eb19dad714458p1d851bjsn1078d70b3e88\",\r\n\t\t        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\"\r\n            }\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then((songs) => {\r\n                setSongs(songs.data)\r\n                // console.log(songs.data)\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n        }\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            search = 'queen'\r\n        }\r\n        getData()\r\n    }, [search]) //useState is called only once before the songs are set.\r\n\r\n    return (\r\n        <div className='mainContent'>\r\n            <input type = 'text' name = 'search' className = 'mainContent__search'\r\n            value = {search}\r\n            onChange = {setSearch}\r\n            />\r\n            {/* <Navbar className = 'mainContent__navbar' /> */}\r\n            <div className = 'mainContent__songRow'>\r\n                {songs.map((song) => {\r\n                    return (\r\n                        <Song\r\n                        key = {song.id}\r\n                        song_image = {song.album.cover_xl}\r\n                        song_title = {song.album.title}\r\n                        artist = {song.artist.name}\r\n                        url = {song.preview}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContent","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Song.js",[],["45","46"],"D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Navbar.js",["47"],"import React, { useState } from 'react'\r\nimport MainContent from './MainContent'\r\nimport '../styles/Navbar.css'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n\r\n    const [search, setSearch] = useState('recommended')\r\n\r\n    function changeSearch(e){\r\n        setSearch(e.target.value)\r\n    }\r\n \r\n    return (\r\n        <div className = 'navbar'>\r\n            <div className = 'navbar__content'>\r\n                <div className='navbar__top'>\r\n                    <input type='text' name='search' id = 'searchValue' className='navbar__search' value = {search}\r\n                    onChange = {changeSearch}\r\n                    placeholder = 'Search'\r\n                    />\r\n                    <div className='navbar__topRight'>\r\n                        <button type='button'>UPGRADE</button>\r\n                        <div className='navbar__userInfo'>\r\n                            <img\r\n                                className='navbar__profilePic'\r\n                                src='https://www.computerhope.com/jargon/g/guest-user.jpg'\r\n                                alt=''\r\n                            />\r\n                            <p>Username</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h1 className = 'navbar__header'>Home</h1>\r\n            </div>\r\n            <MainContent \r\n            search = {search}\r\n            setSearch = {changeSearch}\r\n            className = 'mainContent'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","D:\\Gautam\\ReactJS\\spotify-clone\\src\\components\\Login.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":32,"column":22,"nodeType":"54","endLine":32,"endColumn":29},{"ruleId":"48","replacedBy":"55"},{"ruleId":"50","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":4,"column":10,"nodeType":"59","messageId":"60","endLine":4,"endColumn":20},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"react-hooks/exhaustive-deps","Assignments to the 'search' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["61"],["62"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]